# directories
#
# System directories
SYSINC_DIR = /vw-ppc/include

#
# Midas related directories
INC_DIR  = ../include
SRC_DIR  = ../src
DRV_DIR  = ../drivers

#
# Midas operating system dependent directories
OBJ_DIR  = obj

# targets
OBJS    = $(OBJ_DIR)/midas.o $(OBJ_DIR)/system.o $(OBJ_DIR)/mrpc.o $(OBJ_DIR)/odb.o $(OBJ_DIR)/ybos.o
DRIVERS = $(OBJ_DIR)/cd_hv.o $(OBJ_DIR)/cd_multi.o $(OBJ_DIR)/null.o \
	  $(OBJ_DIR)/ces8210.o $(OBJ_DIR)/lrs1151.o $(OBJ_DIR)/lrs1190.o \
	  $(OBJ_DIR)/vmeio.o $(OBJ_DIR)/esone.o $(OBJ_DIR)/camacnul.o $(OBJ_DIR)/camacrpc.o \
	  $(OBJ_DIR)/caenv488.o  $(OBJ_DIR)/lrs4032.o $(OBJ_DIR)/caen170a.o
LIB     = $(OBJ_DIR)/libmidas.o

CC_COMPILER	 = -ansi -fstrength-reduce -save-temps -fkeep-inline-functions
CC_DEBUGGING     = -g
CC_WARNINGS_ALL  = -Wall 
CC_WARNINGS_NORMAL = -Winline
CC_WARNINGS_NONE =
CC_OPTIM_NORMAL  = -O -finline-functions -fkeep-inline-functions
CC_OPTIM_TARGET  = -O -fvolatile

CC = /vxworks-ppc/bin/ccppc
LD = /vxworks-ppc/bin/ldppc
# internally defined by X-compiler
# CPU= PPC604

# Define Current Configuration
CC_OPTIM	 = $(CC_OPTIM_NORMAL)
CC_INCLUDES      = -I$(INC_DIR) -I$(SYSINC_DIR)
CC_WARNINGS	 = $(CC_WARNINGS_NORMAL)
CC_DEFINES	 = -DOS_VXWORKS -D$(CPU) $(DEFINE_CC) $(EXTRA_DEFINE)

CFLAGS = $(CC_OPTIM) $(CC_WARNINGS) $(CC_INCLUDES) $(CC_COMPILER) $(CC_DEFINES)

all: $(LIB) $(OBJ_DIR)/mfe.o $(DRIVERS) 

install:
## objects 
	@echo "... "
	@echo "... Installing standard VxWorks Midas package"
	@echo "... "
	cp $(OBJ_DIR)/libmidas.o $(SYSOBJ_DIR)
	cp $(OBJ_DIR)/mfe.o      $(SYSOBJ_DIR)

# create library and binary directories
$(OBJ_DIR):
	@if [ ! -d  $(OBJ_DIR) ] ; then \
           echo "Making directory $(OBJ_DIR)" ; \
           mkdir $(OBJ_DIR); \
        fi;

$(LIB): $(OBJ_DIR) $(OBJS)
	 rm -f $(LIB)
	 $(LD) -o $(LIB) -r $(OBJS)

$(OBJ_DIR)/midas.o: $(SRC_DIR)/midas.c $(INC_DIR)/msystem.h $(INC_DIR)/midas.h $(INC_DIR)/mrpc.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/midas.o $(SRC_DIR)/midas.c
$(OBJ_DIR)/system.o: $(SRC_DIR)/system.c $(INC_DIR)/msystem.h $(INC_DIR)/midas.h $(INC_DIR)/mrpc.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/system.o $(SRC_DIR)/system.c
$(OBJ_DIR)/mrpc.o:  $(SRC_DIR)/mrpc.c $(INC_DIR)/msystem.h $(INC_DIR)/midas.h $(INC_DIR)/mrpc.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/mrpc.o $(SRC_DIR)/mrpc.c
$(OBJ_DIR)/odb.o:   $(SRC_DIR)/odb.c $(INC_DIR)/msystem.h $(INC_DIR)/midas.h $(INC_DIR)/mrpc.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/odb.o $(SRC_DIR)/odb.c
$(OBJ_DIR)/ybos.o:   $(SRC_DIR)/ybos.c $(INC_DIR)/msystem.h $(INC_DIR)/midas.h $(INC_DIR)/mrpc.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/ybos.o $(SRC_DIR)/ybos.c

#
#  Frontend Midas kernel to be used for user code linking
$(OBJ_DIR)/mfe.o:   $(SRC_DIR)/mfe.c
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/mfe.o $(SRC_DIR)/mfe.c

## General purpose drivers 
$(OBJ_DIR)/null.o:      $(DRV_DIR)/null.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/null.o $(DRV_DIR)/null.c
$(OBJ_DIR)/cd_hv.o:     $(DRV_DIR)/cd_hv.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/cd_hv.o $(DRV_DIR)/cd_hv.c
$(OBJ_DIR)/cd_multi.o:  $(DRV_DIR)/cd_multi.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/cd_multi.o $(DRV_DIR)/cd_multi.c
$(OBJ_DIR)/lrs4032.o:   $(DRV_DIR)/lrs4032.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/lrs4032.o $(DRV_DIR)/lrs4032.c
$(OBJ_DIR)/caen170a.o:  $(DRV_DIR)/caen170a.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/caen170a.o $(DRV_DIR)/caen170a.c
$(OBJ_DIR)/lrs1151.o:   $(DRV_DIR)/lrs1151.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/lrs1151.o $(DRV_DIR)/lrs1151.c
$(OBJ_DIR)/lrs1190.o:   $(DRV_DIR)/lrs1190.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/lrs1190.o $(DRV_DIR)/lrs1190.c
$(OBJ_DIR)/esone.o:     $(DRV_DIR)/esone.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/esone.o $(DRV_DIR)/esone.c
$(OBJ_DIR)/ces8210.o:   $(DRV_DIR)/ces8210.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/ces8210.o $(DRV_DIR)/ces8210.c
$(OBJ_DIR)/caenv488.o:   $(DRV_DIR)/caenv488.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/caenv488.o $(DRV_DIR)/caenv488.c
$(OBJ_DIR)/vmeio.o:     $(DRV_DIR)/vmeio.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/vmeio.o $(DRV_DIR)/vmeio.c
$(OBJ_DIR)/mtest.o:     $(DRV_DIR)/mtest.c
	$(CC) $(CFLAGS) $(OSFLAGS) $(CC_INCLUDES) -c -o $(OBJ_DIR)/mtest.o $(DRV_DIR)/mtest.c

#$(OBJ_DIR)/sc: $(OBJ) $(SRC_DIR)/mfe.c $(WORK_DIR)/frontend.c $(DRV_DIR)/lrs4032.c
#	$(CC) $(CFLAGS) -c -o $(OBJ_DIR)/mfe.o $(SRC_DIR)/mfe.c
#	$(CC) $(CFLAGS) -c -o $(OBJ_DIR)/frontend.o $(DRV_DIR)/frontend.c
#	$(CC) $(CFLAGS) -c -o $(OBJ_DIR)/caen170a.o $(DRV_DIR)/caen170a.c
#	$(CC) $(CFLAGS) -c -o $(OBJ_DIR)/lrs4032.o $(DRV_DIR)/lrs4032.c
#	$(LD) -o $(OBJ_DIR)/mfe.o -r $(OBJ_DIR)/mfe.o $(OBJ_DIR)/frontend.o\
#			 $(OBJ_DIR)/lrs4032.o $(OBJ_DIR)/caen170a.o 

clean:
	rm -f $(OBJS) *~ \#*
