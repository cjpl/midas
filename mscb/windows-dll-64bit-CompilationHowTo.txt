This HowTo includes a step-bystep instruction to compile the mscb.dll from source code in and for windows, including 64-bit.

26.06.2012 by Jochen.Krempel@phys.ethz.ch

This instruction provides one way to achieve the target. There may be others.


Use MS Visual C++ 2010 (Express) 
 you will need Windows SDK 7.0A for the network-communication (ws2_32.dll) normally it should be included in VC++ (typically  C:\Program Files\Microsoft SDKs\Windows\v7.0A )

For building a 64-bit DLL you need additionally "Microsoft Windows SDK for Windows 7 and .NET Framework 4" Version 7.1
  If I understand correctly, this can be done from a 32bit system as well (Cross-compile)



Create a new Project:  "Win32 Project", specify a name and folder.
  Application type  "DLL"  ;   Option "empty project"

---- in case you want to compile for 64-bit systems:
 Menu Project\Properties\
    Select "Configuration Properties"
    Click "Configuration Manager"
    Click the Active Solution Platform list, and then select the <New…> option to open the New Solution Platform Dialog Box.
    Click the Type or select the new platform drop-down arrow, and then select a 64-bit platform.  (normally x64)
    OK,  OK.
-----

Copy  "mscb.c mscb.h , mscbrpc.c, mscbrpc.h , mxml, musbstd"  to project folder  while maintaining the folder structure
  (this means  mxml-folder and  midas-folder)

use  Menu:Project\Add Existing Item  to  include all source files *.c and *.h  into the project


modify the configuration of the project
 make sure that they appear in "ALL configurations" (not only debug OR Release)!
  Precede  "$(ProjectDir)\midas\include;$(ProjectDir)\mxml;"  (without quotes)  To Menu:Project\Properties\Configuration Properties\ VC++ Directories\Include Directories
  Precede  "WS2_32.Lib;"   (without quotes)  To Menu:Project\Properties\Configuration Properties\Linker\input\Additional Dependencies
  Precede  "HAVE_USB;EXPORT_DLL;"   (without quotes) To  Menu:Project\Properties\Configuration Properties\C/C++\Preprocessor\PreProcessorDefinitions
specifically for Windows 7 64 bit with Windows SDK installed in "Program Files" and VC++ installed in "Program Files(x68)"
  Precede  "C:\Program Files\Microsoft SDKs\Windows\v7.1\Lib\x64;" (without quotes)  To Menu:Project\Properties\Configuration Properties\ VC++ Directories\Library Directories

Menu:Debug\"Build Solution"

Search the compiled File in the proper Output Folder  (There will be different  for Debug, Release, x64\Debug, x64\Release )


You may put the DLL into the folder where your application searches for it.
  If you want to provide a 32-bit AND a 64-bit version of your DLL, you should read about the SysWOW64 folder. (the 32-bit version goes into there. The 64-bit version (having the same name) goes into the System32 folder.


Good Luck
