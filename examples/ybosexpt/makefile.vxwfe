# usage
#
#
# directories
USER_DIR= .
OBJ_DIR = obj
CAM_DIR = /vw/camac
VME_DIR = /vw/vme
VXW_DIR = /vw/h
##SYSINC_DIR = /usr/local/include
##SYSOBJ_DIR = /vw/obj
SYSINC_DIR = /usr/users/midas/midas/include
SYSOBJ_DIR = /usr/users/midas/midas/vxworks/obj
GCC_EXEC_PREFIX = /usr1/local/gnu-toolkit/decmips.68k/lib/gcc-lib/

# targets

#CC_COMPILER	 = -ansi -pedantic -pipe -nostdinc -v
CC_COMPILER	 = -ansi -fstrength-reduce -O
#CC_COMPILER	 = -ansi 
CC_DEBUGGING     = -g
CC_WARNINGS_ALL  = -Wall
CC_WARNINGS_NONE =
CC_OPTIM         = 
#CC_OPTIM         = -fno-builtin
CC_OPTIM_NORMAL  = -O -fstrength-reduce -fcombine-regs
CC_OPTIM_TARGET  = -O -fvolatile

CC = cc68k
LD = ld68k
CPU= MC68040

# Define Current Configuration
CC_OPTIM	 = 
CC_INCLUDES      = -I$(SYSINC_DIR) -I$(CAM_DIR) -I$(VME_DIR) -I$(VXW_DIR) 
CC_WARNINGS	 = $(CC_WARNINGS_NONE)
CC_DEFINES	 = -Dvxw -m68040 -DCPU=$(CPU) $(DEFINE_CC) $(EXTRA_DEFINE)

CFLAGS = $(CC_OPTIM) $(CC_WARNINGS) $(CC_INCLUDES) $(CC_COMPILER) $(CC_DEFINES)

$(OBJ_DIR)/mfe.o: $(CAM_DIR)/cam8210.h $(VME_DIR)/libvme.h $(OBJ_DIR)/$(UFE).o
	$(LD) -o $(OBJ_DIR)/mfe.o -r $(SYSOBJ_DIR)/mfe.o $(OBJ_DIR)/$(UFE).o 
	rm -f $(OBJ_DIR)/$(UFE).o 


$(OBJ_DIR)/$(UFE).o: $(OBJ_DIR) $(USER_DIR)/$(UFE).c $(CAM_DIR)/cam8210.h $(VME_DIR)/libvme.h
	$(CC) -c $(CFLAGS) -o $(OBJ_DIR)/$(UFE).o $(USER_DIR)/$(UFE).c

$(OBJ_DIR):
	@if [ ! -d  $(OBJ_DIR) ] ; then \
           echo "Making directory $(OBJ_DIR)" ; \
           mkdir $(OBJ_DIR); \
        fi;

clean:
	rm -f $(OBJS) *~ \#*
